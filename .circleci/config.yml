# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

jobs:
  JDK8:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v8-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v8-dependencies-

      - run:
          command: |
            mvn install:install-file -Dfile=$JAVA_HOME/lib/tools.jar -DgroupId=com.sun -DartifactId=tools -Dversion=8 -Dpackaging=jar
            mvn -DskipTests clean install dependency:resolve-plugins dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v8-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn clean integration-test
  JDK11:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v11-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v11-dependencies-

      - run: mvn -DskipTests clean install dependency:resolve-plugins dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v11-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn clean integration-test
  JDK13:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:13-jdk-buster

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v11-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v11-dependencies-

      - run: mvn -DskipTests clean install dependency:resolve-plugins dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v11-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn clean integration-test

workflows:
  version: 2
  build_and_test:
    jobs:
      - JDK8
      - JDK11
      - JDK13
