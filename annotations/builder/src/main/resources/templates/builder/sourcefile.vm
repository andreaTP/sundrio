package ${model.packageName};

#foreach($i in $model.imports)
import $i;
#end

#class ($model) {

#if  ($model.isInterface())
#else
#foreach($f in $model.properties)
    #field ($f)
#end
#foreach ($c in ${model.constructors})

#method ($c, false, 1)  
#foreach ($s in $c.block.statements)
$s.toString()
#end

#end
#end
#end
#foreach($m in $model.methods)

#method ($m, $model.isInterface(), 1) 
#foreach ($s in $m.block.statements)
$s.toString()
#end

#end
#end
#foreach($n in $model.innerTypes)

    #class ($n) {
#if  ($n.isInterface())
#else
#foreach($f in $n.properties)
        private final ${f.typeRef} ${f.name};
#end
#foreach($c in $n.constructors)

#method ($c, false, 3) 
#foreach ($s in $c.block.statements)
$s.toString()
#end
        
#end
#end
#end
#foreach($m in $n.methods)

#method ($m, $n.isInterface(), 3) 
#foreach ($s in $m.block.statements)
$s.toString()
#end

#end
#end
    }
#end
#end
#end
}